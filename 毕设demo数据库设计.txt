通用部分
微信用户信息：
	user_info:
		user_id
		openid
		nick_name
		avatar_url
	
	UserInfo:
		userId
		openid
		nickName
		avatar_url
		List<Course> courseList
		List<Article> articleList
		
	相关操作：
		插入用户
		按照openid查询用户
		
MyMOOC部分：
课程信息：
	course:
		course_id
		course_name
		course_desc
		teacher_id
	
	Course:
		courseId
		courseName
		courseDesc
		List<Article> articleList
		List<Movie> movieList
		Teacher teacher
		
	相关操作：
		按照条件分页查询课程
		按照id查询课程
	
讲师信息：
	teacher:
		teacher_id
		teacher_name
		teacher_desc
		avatar_url
		user_id
	
	Teacher:
		teacherId
		userId
		teacherName
		teacherDesc
		avatarUrl
		
	相关操作：
		根据教师id查询教师信息
		
评论信息：
	comment:
		comment_id
		comment_content
		user_id
		course_id
		comment_date
		
	Comment:
		commentId
		commentContent
		UserInfo user
		courseId
		commentDate
	
	相关操作：
		查询某一课程全部评论
		插入评论
		
收藏信息:
	user_collection:
		user_id
		course_id
		
	UserCollection:
		userId
		courseId
	
	相关操作：
		点击收藏后先检查用户是否收藏过该课程
			收藏则取消收藏
			没收藏则插入
		根据用户id查询出全部收藏课程列表
		
视频信息：
	movie:
		movie_id
		movie_name
		movie_url
		course_id
		chapter
		
	Movie:
		movieId
		movieName
		movieUrl
		courseId
		chapter
		
	相关操作：
		根据id精确查询视频
		根据课程id查询课程列表

文章信息:
	article:
		article_id
		article_title
		article_content
		course_id
		chapter
		article_type ppt、pdf
	
	Article:
		articleId
		articleTitle
		articleContent
		courseId
		chapter
		articleType ppt、pdf
		
	相关操作：
		根据id精确查询文章
		根据章节查找文章列表
		
用户-课程：
	user_course:
		user_id
		course_id
		chapter 学习章节进度，与movie、article的chapter对应
		current_pos 章节视频观看进度
		
	CourseHistory:
		userId
		courseId
		chapter
		currentPos
		
	相关操作：
		用户点击进入课程时插入
		加载个人信息时读取用户看过的课程（需左外连接）
		

重点操作：
	用户点击课程进入课程界面的处理过程：
		微信端发送用户id与课程id
		服务器首先进行更新用户学习的课程
			若用户第一次学习本课程，则进行信息插入，并返回本课程1-1视频、文章
			否则不进行信息插入，按照查询结果(即学习历史)返回该章节视频、文章
		服务端根据课程id查询全部视频列表movieList与本章节的文章articleList
		服务端将信息汇总为course、movieList、articleList、currentMovie、currentPos返回

MyEvent部分：
预约事件：
	event：
		event_id
		user_id
		room_id
		group_name
		event_name
		event_detail
		event_date	格式：yyyy-m(mm)-d(dd)
	
	Event:
		eventId
		userId
		roomId
		groupName
		eventName
		eventDetail
		eventDate
	
	相关操作：
		插入事件
		根据会议室id查询全部预约
		根据用户id查询用户的预约
		根据时间与会议室id查询该会议室是否被预定
		根据事件id改变事件
		根据事件id删除事件
		
会议室：
	room:
		room_id
		room_name
	
	Room:
		roomId
		roomName
		eventList 关联查询使用
		
	相关操作：
		分页查询会议室
		
MyPlan相关：
	plan:
		plan_id
		user_id
		plan_name
		group_name
		plan_detail
		plan_date
		plan_time  开始时间
		
	Plan:
		planId
		userId
		planName
		groupName
		planDetail
		planDate
		planTime
		
	相关操作：
		列出全部计划
		根据日期列出该日期的全部计划
		根据用户id列出该用户全部计划
		根据用户id与日期列出该天该用户的全部计划
		根据计划id进行修改与删除
		插入计划
		